@model Inmobiliaria.Models.Inmueble

@{
    ViewData["Title"] = "Details";
    var Contrato = ViewBag.Contrato;

}


<head>
    <link rel="stylesheet" href="~/css/inmuebles_detalles.css">
</head>

<a asp-action="Index" class="btn-volver"><i class="fa-solid fa-arrow-left"></i></a>

<div class="header-detalles d-flex flex-column flex-md-row">

    <div class="info-esencial col-md-6 d-flex flex-column">
        <h5 class="card-title"><i class="fa-solid fa-house"></i>@Model.Tipo.Tipo de uso @Model.UsoNombre</h5>
        <p><i class="fa-solid fa-person-shelter"></i>@Model.Cantidad_ambientes ambientes</p>
        <p><i class="fa-solid fa-hand-holding-dollar"></i>@Model.Precio</p>
        <p><i class="fa-solid fa-location-dot"></i>@Model.Direccion</p>
        
        <div>
            @if(ViewBag.Disponible != null && ViewBag.Disponible) { 
                <p class="condiciones-contrato">El arrendatario se compromete a mantener la vivienda en buen estado de conservación y limpieza, realizando las reparaciones necesarias en caso de daños ocasionados por su uso o el de sus invitados.No se permitirá la subarrendamiento de la vivienda a terceros sin el consentimiento previo y por escrito del arrendador. En caso de hacerlo, se considerará incumplimiento del contrato y podrá proceder a la rescisión del mismo.</p>
                <div class="d-inline-block">
                    @Html.ActionLink("Ver Contrato", "Details", "Contratos", new { id = Contrato.Id }, new { @class = "btn btn-primary"})
                </div>
            }
            
            <div class="d-inline-block">
                @Html.ActionLink("Contratos", "ContratosPorInmueble", "Contratos", new { idInmueble = Model.Id }, new { @class = "btn btn-primary"})
            </div>
        </div>
    </div>

    <div class="info-foto col-md-6 align-items-center justify-content-center">
        <img class="card-img-top" src="https://www.bbva.com/wp-content/uploads/2021/04/casas-ecolo%CC%81gicas_apertura-hogar-sostenibilidad-certificado-.jpg" alt="Foto del inmueble">  
        @if(ViewBag.Disponible != null && ViewBag.Disponible) { 
            <p class="estado ocupado">Ocupado</p>
        }else{
            <p class="estado disponible">Disponible</p>
        }
    </div>

</div>

@* columnas dentro de un mismo contenedor debe ser igual a 12 para que el diseño sea responsive y se adapte correctamente a diferentes tamaños de pantalla. *@
<div class="d-flex flex-column flex-md-row center-detalles">

    <div class="container-card col-12 col-md-3">
        <div class="card-propietario">
            <h4 class="text-center">PROPIETARIO</h4>
            <div class="d-flex align-items-center justify-content-around header-card">
                <img src="/uploads/imagenPorDefecto.png" alt="">
                <p class="nombre">@Model.Propietario.Nombre @Model.Propietario.Apellido</p>
            </div>
            <div class="info-card">
                <p>Email: @Model.Propietario.Email</p>
                <p>Tel: @Model.Propietario.Telefono</p>
            </div>
        </div>

        @Html.ActionLink("Ver", "Details", "Propietarios", new { id = Model.PropietarioId }, new { @class = "btn btn-primary mt-auto btn-propietario" })


    </div>

  <div class="col-12 col-md-9 container-map">  @* 3/4 ancho*@
    <div id="map" style="height: 400px;"></div>
  </div>

</div>

<div class="container-botones d-flex flex-column flex-md-row justify-content-center align-items-center">
    @if(ViewBag.Disponible != null && !ViewBag.Disponible) { 
        <a href="@Url.Action("Create", "Contratos",  new { idInmueble = @Model.Id })" class="btn btn-success btn-alquilar">
            <i class="fa-solid fa-check-double"></i>Alquilar
        </a>
    }

    <button class="btn btn-warning" onclick="location.href='@Url.Action("Edit", new { id = Model.Id })'">
        <i class="fa-solid fa-pen-to-square"></i>Editar
    </button>

    <button class="btn btn-danger" onclick="location.href='@Url.Action("Delete", new { id = Model.Id })'">
        <i class="fa-solid fa-trash"></i>Eliminar
    </button>
</div>


<script src="https://cdn.jsdelivr.net/npm/leaflet@1.7.1/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/leaflet@1.7.1/dist/leaflet.css" />

<script>
    var coordenadas = '@Model.Coordenadas';
    var latitud = coordenadas.split(',')[0].trim(); //en dos partes separadas por una coma, y luego se toma la primera parte usando el índice [0]
    var longitud = coordenadas.split(',')[1].trim(); //en dos partes separadas por una coma, y luego se toma la primera parte usando el índice [0]

    var map = L.map('map').setView([latitud, longitud], 14);

    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    L.marker([latitud, longitud]).addTo(map)
        .openPopup();
</script>
