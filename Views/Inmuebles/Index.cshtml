@model IEnumerable<Inmobiliaria.Models.Inmueble>

@{
    ViewData["Title"] = "Inmuebles";
    var action = "";
    var p = "";

    if(ViewBag.FiltroDisp != null){
        if(ViewBag.FiltroDisp){
        @* Si se activo el filtro de ver todos *@
            action = "Index";
            p = "Ver todos";
        }
    }
    else if(ViewBag.FiltroPropietario != null){
        if(ViewBag.FiltroPropietario){
            action = "Index";
            p = "Ver todos";
        }
    }else if(ViewBag.FiltroFechas != null){
        if(ViewBag.FiltroFechas){
            action = "Index";
            p = "Ver todos";
        }
    }else{
    @* Si no ... *@
        action = "Disponibles";
        p = "Inmuebles disponibles";
    }
}

<head>
    <link rel="stylesheet" href="~/css/inmuebles.css">
</head>



<div class="d-flex justify-content-between">
    <div class="d-flex container-title">
        <h1>Inmuebles</h1>
        <a asp-action="Create"><i class="fa-solid fa-square-plus"></i></a>
    </div>

    <div class="dropdown">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
            Filtrar
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
            <li><a class="dropdown-item" asp-controller="Inmuebles" asp-action=@action>@p</a></li>
            @if(ViewBag.FiltroFechas == null){
                <li><a class="dropdown-item" asp-controller="Inmuebles" asp-action="InmueblesPorFecha" data-toggle="modal" data-target="#modalFechas">Disponibles por fechas</a></li>
            }
        </ul>
    </div>
</div>

@if(ViewBag.FiltroFechas != null && ViewBag.FiltroFechas){
    <div>
        <p>Inmuebles disponibles entre el @ViewBag.Fechas.fechaDesde y @ViewBag.Fechas.fechaHasta</p>
    </div>
}

@if(ViewBag.NumeroDeInmuebles != null && ViewBag.NumeroDeInmuebles == 0){
    <div class="container-sin-datos d-flex align-items-center justify-content-center">
        <p>No hay inmuebles que mostrar</p>
    </div>
}


<div class="container-fluid">
  <div class="row justify-content-evenly">
    @foreach (var item in Model) {
        <div class="col-sm-6 col-md-4 col-lg-3 card-inmueble">
            <div class="card_header" data-id="@item.Id">
                <p class="estado disponible" id="estado">Procesando...</p>

                @if(item.ImagenRuta != null){
                    <img class="card-img-top" src="@item.ImagenRuta" alt="Foto del inmueble">    
                }else{
                    <img class="card-img-top" src="https://www.bbva.com/wp-content/uploads/2021/04/casas-ecolo%CC%81gicas_apertura-hogar-sostenibilidad-certificado-.jpg" alt="Foto del inmueble">
                }
                
            </div>

            <div class="card-body">
                <h5 class="card-title">@item.Tipo.Tipo - @item.UsoNombre</h5>
                <p><i class="fa-solid fa-location-dot"></i>@item.Direccion</p>
                <p><i class="fa-solid fa-person-shelter"></i>@item.Cantidad_ambientes ambientes</p>
                <p><i class="fa-solid fa-hand-holding-dollar"></i>@item.Precio</p>
                @Html.ActionLink("Ver", "Details", new {id=item.Id },  new { @class = "fa-solid fa-eye enlace-detalles" })
            </div>
        </div>

        <script>
            (async function verificarContratoVigente(idInmueble) {
                try {
                    const response = await fetch(`/Contratos/Vigente?idInmueble=${idInmueble}`);
                    if (!response.ok) {
                        throw new Error("Network response was not ok");
                    }
                    const disponible = await response.json();
                    console.log(disponible);
                    // Aqu√≠ puedes utilizar el valor booleano obtenido en 'data'
                    const parent = document.querySelector(`[data-id="${idInmueble}"]`);
                    const estado = parent.querySelector(".estado");
                    if (disponible) {
                        estado.classList.remove("disponible");
                        estado.classList.add("ocupado");
                        estado.innerHTML = "Ocupado";
                    } else if (!disponible) {
                        estado.classList.remove("ocupado");
                        estado.classList.add("disponible");
                        estado.innerHTML = "Disponible";
                    }

                } catch (error) {
                    console.error("There was a problem with the fetch operation:", error);
                }
            })(@item.Id);
        </script>
    }
  </div>
</div>

<!-- Modal -->
<div class="modal" id="modalFechas" tabindex="-1" role="dialog">
  <div class="modal-dialog modal-fechas" role="document">
    <div class="modal-content">

      <div class="modal-header">
        <h5 class="modal-title">Filtrar por fechas</h5>
        <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close"></button>
      </div>

      <div class="modal-body">
        <form action="/Inmuebles/FiltrarPorFechas" class="form-filtro-fechas d-flex align-items-center flex-column justify-content-space-between">
            <div>
                <label for="">Desde</label>
                <input type="date" name="fechaDesde" id="fechaDesde" required>
            </div>
            <div>
                <label for="">Hasta</label>
                <input type="date" name="fechaHasta" id="fechaHasta" required>
            </div>
            <div class="modal-footer">
                <input type="submit" class="btn btn-primary" value="Filtrar"/>
            </div>
        </form>
      </div>

    </div>
  </div>
</div>

