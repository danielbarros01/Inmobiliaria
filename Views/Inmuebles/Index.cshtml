@model IEnumerable<Inmobiliaria.Models.Inmueble>

@{
    ViewData["Title"] = "Index";
    var action = "";
    var p = "";
}

<div class="d-flex align-items-center justify-content-between">
    <h1>Seccion de inmuebles</h1>
    <div>
        <a class="" asp-area="" asp-controller="TipoInmueble">Tipos de Inmueble</a>
    </div>
</div>


<p>
    <a asp-action="Create"><i class="fa-solid fa-square-plus"></i></a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Tipo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Direccion)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Uso)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cantidad_ambientes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Coordenadas)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Precio)
            </th>
            <th class="">
                @if(ViewBag.FiltroDisp != null){
                    if(ViewBag.FiltroDisp){
                        action = "Index";
                        p = "ON";
                    }
                }else{
                    action = "Disponibles";
                    p = "OFF";
                }
                
                <form asp-action=@action method="get">
                    <input type="submit" value="Disponible" id="btnDisponible" class="d-inline"> 
                    <p id="stateButton" class="d-inline">
                        @p
                    </p>
                </form>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tipo.Tipo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Direccion)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Uso)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cantidad_ambientes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Coordenadas)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Precio)
            </td>
            <td>
                @((@item.Disponible) ? "Disponible" : "Ocupado")
            </td>
            <td>
                @Html.ActionLink("", "Edit", new { id=item.Id }, new {@class = "fa-solid fa-pen-to-square"})
                @Html.ActionLink("", "Details", new {id=item.Id  },  new { @class = "fa-solid fa-circle-info" })
                @if (User.IsInRole("Administrador")){
                @Html.ActionLink("", "Delete", new { id = item.Id }, new { @class = "fa-solid fa-trash" })
                }
            </td>
        </tr>
}
    </tbody>
</table>

@* <script>
    const d = document;
    let state = false;
    d.addEventListener('DOMContentLoaded', () => {
        let boton = d.getElementById("btnDisponible");
        let p = d.getElementById("stateButton");

        boton.addEventListener("click", () => {

        if(state == false){
            state = true;
            p.innerText = "ON";
            p.style.color = "green";



        }else{
            state = false;
            p.innerText = "OFF";
            p.style.color = "black";
        }


        })
    })

</script> *@
